% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/LatentClassJM.R
\name{LatentClassJM}
\alias{LatentClassJM}
\title{Sieve nonparametric maximum likelihood estimation for the semiparametric latent-class joint model}
\usage{
LatentClassJM(
  Y,
  X,
  W,
  Time,
  D,
  ni,
  Z,
  G,
  nknots,
  knots = NA,
  degree,
  covar = "ind",
  like.diff1 = FALSE,
  like.diff2 = TRUE,
  accelEM = TRUE,
  bound = 5,
  h = 10,
  epsilon = 0.001,
  epsilon2 = 1e-06,
  init.param = NULL,
  h2 = 10,
  cal.inf = FALSE,
  max.iter = 5000,
  seed = 1
)
}
\arguments{
\item{Y}{An \eqn{(n \times J \times m)} array of longitudinal outcome measurements, where \eqn{n} is the sample size, \eqn{J} is the number of longitudinal measurement types, and
\eqn{m} is the maximum number of measurement times. It can contain \code{NA} values if the number of measurements for a subject is fewer than the maximum number of measurements. The \eqn{(i,j,k)}th element corresponds to the \eqn{k}th measurement of the \eqn{j}th type of longitudinal outcome for the \eqn{i}th subject}

\item{X}{An \eqn{(n \times J \times m \times p_X)} array of covariates (excluding intercept) of the longitudinal outcome model, 
where \eqn{n} is the sample size, \eqn{J} is the number of longitudinal measurement types, \eqn{m} is the number of measurement times, and \eqn{p_X} is the number of covariates. 
The \eqn{(i,j,k,l)}th element corresponds to the \eqn{l}th covariate for the \eqn{k}th measurement of the \eqn{j}th type of longitudinal outcome for the \eqn{i}th subject}

\item{W}{An \eqn{(n \times p_W)} matrix of covariates for the latent class regression model, where \eqn{n} is the sample size, and 
\eqn{p_W} is the number of covariate. The \eqn{(i,l)}th element corresponds to the \eqn{l}th covariate for the \eqn{i}th subject}

\item{Time}{An \eqn{n}-vector of observed event or censoring times}

\item{D}{An \eqn{n}-vector of event indicators}

\item{ni}{An \eqn{(n \times J)} matrix of numbers of measurements for the longitudinal outcomes}

\item{Z}{An \eqn{(n \times p_Z)} matrix of time-independent covariates for the survival model, where \eqn{n} is the sample size, and 
\eqn{p_Z} is the number of covariates. The \eqn{(i,l)}th element corresponds to the \eqn{l}th covariate for the \eqn{i}th subject}

\item{G}{Number of latent classes}

\item{nknots}{Number of interior knots for the B-spline basis functions}

\item{knots}{An optional vector of interior knot positions. If not supplied, then the interior knots will be selected based on quantiles of the observed event times}

\item{degree}{The degree of the B-spline basis functions}

\item{covar}{Covariance structure for \eqn{Y}. For covar = \code{ind}, repeated longitudinal measurements are independent conditional on the random effect \eqn{b} and latent class \eqn{C} (\eqn{\sigma_{gj2}=0}); 
for covar = \code{exchange}, repeated longitudinal measurements have an exchangeable covariance matrix conditional on the random effect \eqn{b} and latent class \eqn{C} (\eqn{\sigma_{gj2}\neq 0}); \eqn{\sigma_{gj2}} is defined in Details below. Default is \code{ind}}

\item{like.diff1}{Logical; If \code{TRUE}, then convergence of the standard EM algorithm is based on the difference between log-likelihood values of consecutive iterations; 
otherwise, convergence is based on the maximum difference between parameter values; Default is \code{FALSE}}

\item{like.diff2}{Logical; If \code{TRUE}, then convergence of the accelerated EM algorithm is based on the difference between log-likelihood values of consecutive iterations; 
otherwise, convergence is based on the maximum difference between parameter values; Default is \code{TRUE}}

\item{accelEM}{Logical; The iteration begins with standard EM algorithm. If \code{TRUE}, then the accelerated EM algorithm will be adopted after the end of the standard EM algorithm; otherwise, the program terminates after the standard EM algorithm}

\item{bound}{The upper bound of the absolute value of the parameter estimates}

\item{h}{The number of abscissas for the Gauss-Hermite quadrature in the E-step}

\item{epsilon}{Threshold for convergence of the standard EM algorithm}

\item{epsilon2}{Threshold for convergence of the accelerated EM algorithm}

\item{init.param}{A named list of user-input initial values of model parameters, including \code{alpha}, \code{beta}, \code{sigma2}, \code{xi}, 
\code{eta}, \code{gamma} and \code{haz} \itemize{
\item \code{alpha} is a matrix of \eqn{(G \times p_W)} regression parameters for the multinomial regression; the last row must be zero
\item\code{beta} is an array of \eqn{(G \times J \times p_X)} regression parameters
\item \code{sigma2} is the variance of the error terms of the longitudinal measurements. If covar = \code{exchange},
  then \code{sigma2} is a \eqn{(G \times J \times 2)} array. The \eqn{(g,j,1)}th element is \eqn{\sigma_{gj1}}, and the \eqn{(g,j,2)}th element is \eqn{\sigma_{gj2}}.
  If covar = \code{ind}, then \code{sigma2} is a \eqn{(G \times J)} matrix. The \eqn{(g,j)}th element is \eqn{\sigma_{gj1}}. In this case, \eqn{\sigma_{gj2}} is fixed to be zero
\item \code{xi} is a \eqn{G}-vector of class-specific variances of the latent variable
\item \code{eta} is a \eqn{G}-vector of class-specific regression parameters of the random effect in the survival model
\item \code{gamma} is a \eqn{(G \times (p_Z + q))} matrix of class-specific regression parameters, consisting of 2 parts. The first \eqn{p_Z} columns correspond to regression parameters of the covariates \code{Z}, and the last \eqn{q} columns correspond to regression parameters of the spline functions, where \eqn{q = } \code{nknots}\eqn{+}\code{degree}\eqn{+1}; that is, the \eqn{g}th row of \code{gamma} is \eqn{(\boldsymbol{\gamma}_g^T,\boldsymbol{a}_g^T)}. See Details below
\item \code{haz} is a vector of jumps of the first class-specific cumulative hazard function. The jumps should correspond to the ordered unique observed event times
}}

\item{h2}{The number of abscissas for the Gauss-Hermite quadrature in the calculation of the log-likelihood}

\item{cal.inf}{Logical; if \code{TRUE}, then the information matrix will be calculated}

\item{max.iter}{Maximum number of iterations}

\item{seed}{Seed used for parameter initialization; default is 1}
}
\value{
A list of the following components: \itemize{
  \item \strong{alpha} : A matrix of \eqn{(G \times p_W)} regression parameters for the multinomial regression. 
  The \eqn{g}th row is the parameter vector for the \eqn{g}th latent class; the last row must be zero
  \item \strong{beta} : An array of \eqn{(G \times J \times p_X)} regression parameters. 
  The \eqn{(g,j)}th row is the \eqn{l}th parameter vector for the \eqn{g}th latent class at \eqn{j}th measurement type
  \item \strong{sigma2} : The variance of the error terms of the longitudinal measurements. If covar = \code{exchange}, then \code{sigma2} is a \eqn{(G \times J \times 2)} array. The \eqn{(g,j,1)}th element is \eqn{\sigma_{gj1}}, and the \eqn{(g,j,2)}th element is \eqn{\sigma_{gj2}}. If covar = \code{ind}, then \code{sigma2} is a \eqn{(G \times J)} matrix. The \eqn{(g,j)}th element is \eqn{\sigma_{gj1}}; in this case, \eqn{\sigma_{gj2}} is fixed to be zero
  \item \strong{xi} : A \eqn{G}-vector of class-specific variances of the latent variable
  \item \strong{gamma} : A \eqn{(G \times (p_Z + q))} matrix of class-specific regression parameters, consisting of 2 parts. The first \eqn{p_Z} columns correspond to regression parameters of the covariates \code{Z}, and the last \eqn{q} columns correspond to regression parameters of the spline functions, where \eqn{q = } \code{nknots}\eqn{+}\code{degree}\eqn{+1}; that is, the \eqn{g}th row of \code{gamma} is \eqn{(\boldsymbol{\gamma}_g^T,\boldsymbol{a}_g^T)}
  \item \strong{eta} : A \eqn{G}-vector of class-specific regression parameters of the random effect in the survival model
  \item \strong{Tt} : A vector of ordered unique observed event times
  \item \strong{Haz} : A \eqn{(t \times q)} matrix of all estimated class-specific cumulative hazard function values at \code{Tt}, where \eqn{t} is the length of \code{Tt}
  \item \strong{Bmat} : A \eqn{(t \times q)} matrix of B-spline basis function values at \code{Tt}
  \item \strong{post.prob} : Subject-specific posterior group probabilities
  \item \strong{gridb} : An \eqn{(n \times G \times h)} array of grid for the adaptive Gauss-Hermite quadrature.
  The \eqn{(n,g)}th row corresponds to the grid for the \eqn{i}th subject under the \eqn{g}th latent class
  \item \strong{weightb} : An \eqn{(n \times G \times h)} array of weight for the adaptive Gauss-Hermite quadrature.
  The \eqn{(n,g)}th row corresponds to the weight for the \eqn{i}th subject of the \eqn{g}th latent class
  \item \strong{Information} : Information matrix; \code{NA} when \code{cal.inf} \eqn{=} \code{FALSE}
  \item \strong{loglike} : The log-likelihood value
  }
}
\description{
This function performs the (accelerated) EM algorithm to compute the sieve nonparametric maximum likelihood estimator. The algorithm starts with the standard EM algorithm. 
Once the difference between the log-likelihood values or the parameter values of consecutive iterations becomes smaller than a certain threshold, an accelerated EM algorithm (Vardhan and Roland 2008) will be adopted until convergence.
}
\details{
In this function, we consider a special case of the model introduced in Wong et al. (2022). We consider a model with \eqn{G} latent classes. Let \eqn{C} denote the latent class membership, with \eqn{C = g} if a subject belongs to the \eqn{g}th latent class \eqn{(g = 1, . . . , G)}. We fit a multinomial logistic regression model for \eqn{C}:
\deqn{P(C=g \mid \boldsymbol{W}) = \frac{e^{\boldsymbol{\alpha}_{g}^{T}\boldsymbol{W}}}{\sum_{l = 1}^{G}e^{\boldsymbol{\alpha}^{T}_{l}\boldsymbol{W}}},}
where \eqn{\boldsymbol{W}} is a vector of time-independent covariates that include the constant 1 and \eqn{\boldsymbol{\alpha}_{g}} is the vector of class-specific regression parameters with \eqn{\boldsymbol{\alpha}_{G} = 0}.
Each latent class is characterized by class-specific trajectories of multivariate longitudinal outcomes and a class-specific risk of the event of interest. 
The longitudinal outcomes and the event time are assumed to be conditionally independent given the latent class membership and a multivariate random effect.

Suppose that there are \eqn{J} types of longitudinal outcomes, and the \eqn{j}th type is measured at \eqn{N_j} time points. For \eqn{j=1,\dots,J} and \eqn{k=1,\dots,N_j}, 
let \eqn{Y_{jk}} denote the \eqn{k}th measurement of the \eqn{j}th longitudinal outcome and \eqn{\boldsymbol{X}_{jk}} denote corresponding covariates, 
which include the constant 1. We assume:
\deqn{Y_{jk}\mid_{C=g} = \boldsymbol{\beta}^{T}_{g}\boldsymbol{X}_{jk} + b + \epsilon_{jk}}
for \eqn{g = 1, \dots,G}, where \eqn{\boldsymbol{X}_{jk}} is a vector of covariates that include the constant 1, \eqn{\boldsymbol{\beta}_g} is a vector of class-specific regression parameters, and \eqn{b} is a normal random effect with mean 0 and variance \eqn{\xi_g}.
The error terms \eqn{(\epsilon_{j1},\dots,\epsilon_{jN_{j}})} are dependent zero-mean normal random variables with variance \eqn{\sigma_{gj1}+\sigma_{gj2}} and pairwise covariance \eqn{\sigma_{gj2}}.

Let \eqn{T} denote the event time of interest. We assume a proportional hazards model:
\deqn{\lambda(t\mid\boldsymbol{Z}, \boldsymbol{b}, C=g) = \lambda_{g}(t)e^{\boldsymbol{\gamma}_{g}^{T}\boldsymbol{Z} + \eta_{g}b}}
where \eqn{\boldsymbol{Z}} is a vector of time-independent covariates, \eqn{\lambda_{g}(.)} is an arbitrary class-specific baseline hazard function, and \eqn{\boldsymbol{\gamma}_{g}} and \eqn{\eta_{g}} are class-specific regression parameters.

We use a sieve nonparametric maximum likelihood estimation method to estimate the model parameters. In particular, we let \eqn{\lambda = \lambda_1} and \eqn{\psi_g = \log(\lambda_g/\lambda_1)} for \eqn{g=1,\dots,G}. We approximate \eqn{\psi_g} by \eqn{\sum_{j=1}^q a_{gj}B_j}, where \eqn{B_1,\dots,B_q} are B-spline functions. Then, we can write the survival model as 
\deqn{\lambda(t\mid\boldsymbol{Z},\boldsymbol{b},C=g) = \lambda(t)e^{\boldsymbol{\gamma}_g^T\boldsymbol{Z}+\boldsymbol{a}_g^T\boldsymbol{B}(t)+\eta_{g}b}}
where \eqn{\boldsymbol{a}_g = (a_{g1},\dots,a_{gq})^T} and \eqn{\boldsymbol{B}(t) = (B_1(t),\dots,B_q(t))^T}.
}
\examples{
dataset <- create.data(n=1000)
result <- LatentClassJM(Y=dataset$Y,X=dataset$X,W=dataset$W,Time=dataset$Time,D=dataset$D,ni=dataset$ni,
Z=dataset$Z,G=4,nknots=2,degree=1,cal.inf=TRUE,init.param=NULL,bound=10,h=20,h2=20,covar="exchange")
}
\references{
Varadhan, R. & Roland, C. (2008). Simple and globally convergent methods for accelerating the convergence of any EM algorithm. Scandinavian Journal of Statistics. 35 335–353. 

Wong, K. Y., Zeng, D., & Lin, D. Y. (2022). Semiparametric latent-class models for multivariate longitudinal and survival data. The Annals of Statistics. 50 487–510.
}
\seealso{
\code{survival}
}
\author{
Kin Yau (Alex) Wong <kin-yau.wong@polyu.edu.hk>
}
